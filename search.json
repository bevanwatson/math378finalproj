[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Dataset\n\nThe exploratory data analysis and predictive model were built using the “palmerpenguins” dataset. The full documentation and reference for the dataset can be found here. Feature of the datset are explored on the Penguins EDA tab.\nEDA Methods\nI started with the code provided in the labs by Alex Gold in [DevOps for Data Science]((https://do4ds.com/). I augmented his EDA code with methods found in “R for Data Science”, as well as techniques taught in DATA364.\nModeling Methods\nAs with EDA, I started with the code provided in DO4DS. I build more models based on exercises from MATH378 and “An Introduction to Statistical Learning” with Applications in Python."
  },
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "Penguins EDA",
    "section": "",
    "text": "On this page, I’ll use the R library ggplot2 to visualize the dataset, as well as load it into a DuckDB database.\nFirst, I’ll load necessary r packages\n\n\nCode\nlibrary(palmerpenguins)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(DBI)\nlibrary(duckdb)\nlibrary(dbplyr)\n\n\nLoad penguins dataset (cleaned version)\ndf &lt;- palmerpenguins::penguins\n\n\nCode\ncon &lt;- DBI::dbConnect(\n  duckdb::duckdb(), \n  dbdir = \"my-db.duckdb\"\n  )\ndf &lt;- dplyr::tbl(con, \"penguins\")"
  },
  {
    "objectID": "EDA.html#penguin-size-and-mass-by-sex-and-species",
    "href": "EDA.html#penguin-size-and-mass-by-sex-and-species",
    "title": "Penguins EDA",
    "section": "",
    "text": "On this page, I’ll use the R library ggplot2 to visualize the dataset, as well as load it into a DuckDB database.\nFirst, I’ll load necessary r packages\n\n\nCode\nlibrary(palmerpenguins)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(DBI)\nlibrary(duckdb)\nlibrary(dbplyr)\n\n\nLoad penguins dataset (cleaned version)\ndf &lt;- palmerpenguins::penguins\n\n\nCode\ncon &lt;- DBI::dbConnect(\n  duckdb::duckdb(), \n  dbdir = \"my-db.duckdb\"\n  )\ndf &lt;- dplyr::tbl(con, \"penguins\")"
  },
  {
    "objectID": "EDA.html#distribution-of-flipper-length",
    "href": "EDA.html#distribution-of-flipper-length",
    "title": "Penguins EDA",
    "section": "Distribution of Flipper Length",
    "text": "Distribution of Flipper Length\n\n\nCode\ndf %&gt;%\nggplot(aes(x = flipper_length_mm)) +\n  geom_histogram(binwidth = 5, fill = \"darkblue\", color = \"darkorange\") +\n  ggtitle(\"Distribution of Flipper Length\") +\n  xlab(\"Flipper Length (mm)\") +\n  ylab(\"Count\")"
  },
  {
    "objectID": "EDA.html#distribution-and-bill-length",
    "href": "EDA.html#distribution-and-bill-length",
    "title": "Penguins EDA",
    "section": "Distribution and Bill length",
    "text": "Distribution and Bill length\n\n\nCode\ndf %&gt;%\nggplot(aes(x = bill_length_mm)) +\n  geom_histogram(binwidth = 5, fill = \"darkblue\", color = \"darkorange\") +\n  ggtitle(\"Distribution of Flipper Length\") +\n  xlab(\"Flipper Length (mm)\") +\n  ylab(\"Count\")"
  },
  {
    "objectID": "EDA.html#penguin-bill-length-vs-mass-by-species",
    "href": "EDA.html#penguin-bill-length-vs-mass-by-species",
    "title": "Penguins EDA",
    "section": "Penguin Bill Length vs Mass by Species",
    "text": "Penguin Bill Length vs Mass by Species\n\n\nCode\ndf %&gt;%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + \n  geom_smooth(method = \"lm\") +\n  labs(x = \"Bill Length (mm)\", \n       y = \"Body Mass (g)\", \n       title = \"Relationship Between Bill Length and Body Mass\")\n\n\n\n\n\n\n\nCode\ndf %&gt;%\nggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +\n  geom_point() +\n  labs(\n    title = \"Bill Length vs Flipper Length\",\n    x = \"Bill Length (mm)\",\n    y = \"Flipper Length (mm)\"\n  )\n\n\n\n\n\n\n\nCode\ndf %&gt;%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + \n  geom_smooth(method = \"lm\") +\n  labs(x = \"Bill Length (mm)\", \n       y = \"Body Mass (g)\", \n       title = \"Relationship Between Bill Length and Body Mass\",\n       color = \"Species\")"
  },
  {
    "objectID": "model.html",
    "href": "model.html",
    "title": "Model",
    "section": "",
    "text": "Code\nlibrary(reticulate)\nuse_python(\"/Users/bevanwatson/Desktop/SPRING2024/MATH378/Final_Project/venv/bin/python\", required = TRUE)\nCode\nfrom palmerpenguins import penguins\nfrom pandas import get_dummies\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing\nfrom vetiver import VetiverModel\nfrom pins import board_folder\nfrom vetiver import vetiver_pin_write\nimport duckdb\nfrom palmerpenguins import penguins\nfrom vetiver import VetiverAPI"
  },
  {
    "objectID": "model.html#get-data",
    "href": "model.html#get-data",
    "title": "Model",
    "section": "Get Data",
    "text": "Get Data\n\n\nCode\ndf = penguins.load_penguins().dropna()\n\ndf.head(3)\n\n\n  species     island  bill_length_mm  ...  body_mass_g     sex  year\n0  Adelie  Torgersen            39.1  ...       3750.0    male  2007\n1  Adelie  Torgersen            39.5  ...       3800.0  female  2007\n2  Adelie  Torgersen            40.3  ...       3250.0  female  2007\n\n[3 rows x 8 columns]"
  },
  {
    "objectID": "model.html#define-model-and-fit",
    "href": "model.html#define-model-and-fit",
    "title": "Model",
    "section": "Define Model and Fit",
    "text": "Define Model and Fit\n\n\nCode\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)"
  },
  {
    "objectID": "model.html#get-some-information",
    "href": "model.html#get-some-information",
    "title": "Model",
    "section": "Get some information",
    "text": "Get some information\n\n\nCode\nprint(f\"R^2 {model.score(X,y)}\")\n\n\nR^2 0.8555368759537614\n\n\nCode\nprint(f\"Intercept {model.intercept_}\")\n\n\nIntercept 2169.2697209393973\n\n\nCode\nprint(f\"Columns {X.columns}\")\n\n\nColumns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\n\n\nCode\nprint(f\"Coefficients {model.coef_}\")\n\n\nCoefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]\n\n\n\n\nCode\nv = VetiverModel(model, model_name = 'penguin_model', prototype_data = X)\nb = board_folder('data/model', allow_pickle_read = True)\nvetiver_pin_write(b, v)\n\n\nModel Cards provide a framework for transparent, responsible reporting. \n Use the vetiver `.qmd` Quarto template as a place to start, \n with vetiver.model_card()\nWriting pin:\nName: 'penguin_model'\nVersion: 20240425T204818Z-7b910\n\n\n\n\nCode\napp = VetiverAPI(v, check_prototype = True)\n\n\n\n\nCode\ncon = duckdb.connect('my-db.duckdb')\ndf = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()\ncon.close()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Math378 Final Project: Penguins",
    "section": "",
    "text": "This Bevan Watson’s Math 378 Final Project, developed using Chapters 1-6 of Alex Golds “DevOps for Data Science.”\nSee the “About” Tab for more information about the dataset and methods used."
  }
]